@model ThanalSoft.SmartComplex.Web.Models.Flat.FlatViewModel
@{
    Layout = "";
}
@using (Ajax.BeginForm("Update", "Flat", FormMethod.Post, new AjaxOptions { UpdateTargetId = "container", OnBegin = "loadAnimator", OnComplete = "hideAnimator" }, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    if (Model.ActionResultStatus != null)
    {
        Html.RenderPartial("Partials/_ActionResultStatusPartial", Model.ActionResultStatus);
    }
    <div class="x_panel">
        <div class="x_title">
            <h2>
                <i class="fa fa-home"></i> Update Flat
            </h2>
            <div class="clearfix"></div>
        </div>
        @Html.HiddenFor(pX => pX.FlatInfo.Id)
        @Html.HiddenFor(pX => pX.FlatInfo.ApartmentId)
        <div class="x_content">
            <div class="form-group">
                @Html.LabelFor(m => m.FlatInfo.Name, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.FlatInfo.Name, new { @class = "form-control col-md-7 col-xs-12" })
                </div><span class="required">*</span>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FlatInfo.Floor, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.FlatInfo.Floor, new { @class = "form-control col-md-7 col-xs-12" })
                </div><span class="required">*</span>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FlatInfo.Block, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.FlatInfo.Block, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FlatInfo.Phase, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.FlatInfo.Phase, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FlatInfo.SquareFeet, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.FlatInfo.SquareFeet, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FlatInfo.FlatTypeId, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.DropDownListFor(m => m.FlatInfo.FlatTypeId, Model.FlatTypes, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.FlatInfo.ExtensionNumber, new { @class = "control-label col-md-3 col-sm-3 col-xs-12" })
                <div class="col-md-6 col-sm-6 col-xs-12">
                    @Html.TextBoxFor(m => m.FlatInfo.ExtensionNumber, new { @class = "form-control col-md-7 col-xs-12" })
                </div>
            </div>
            <div class="ln_solid"></div>
            <div class="form-group">
                <div class="col-md-6 col-sm-6 col-xs-12 col-md-offset-3">
                    <button type="button" class="btn btn-dark cancel" onclick="viewFlat(@Model.FlatInfo.Id)">Cancel</button>
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
